version: '3.8'

services:
  # Master Database
  postgres-master:
    image: postgres
    container_name: postgres-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=google_docs
    ports:
      - "5433:5432"
    volumes:
      - master-db:/var/lib/postgresql/data
    networks:
      - google
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
    command: [
      "postgres", 
      "-c", "wal_level=replica", 
      "-c", "max_wal_senders=3", 
      "-c", "max_replication_slots=3"
    ]

  # Replica Database
  postgres-slave:
    build:
      context: .
      dockerfile: Dockerfile.replica
    container_name: postgres-slave
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=google_docs
    ports:
      - "5434:5432"
    depends_on:
      - postgres-master
    volumes:
      - slave-db:/var/lib/postgresql/data
    networks:
      - google
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - google

  migrate:
    image: migrate/migrate
    networks:
      - google
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres-master:
        condition: service_healthy
    command: ["-path", "./migrations", "-database", "postgres://postgres:1234@postgres-master:5432/google_docs?sslmode=disable", "up"]

  userservice:
    container_name: user
    build: .
    ports:
      - "1234:1234"
      - "2345:2345"
    networks:
      - google
    depends_on:
      postgres-master:
        condition: service_healthy
      redis:
        condition: service_healthy

networks:
  google:

volumes:
  master-db:
  slave-db:
